<style>
    .margin-top-20px{
        margin-top: 20px;
    }
    .margin-top-10px{
        margin-top: 10px;
    }
    #due_date-error,#start_date-error{
        opacity: 10;
    }
    .dropdown-header {
        font-weight: 600;
        font-size: 14px;
    }
    .opt.dis {
        display: none;
    }

    .form-group.form-md-line-input .help-block
    {
        opacity: 10 !important;
    }

    .white-font
    {
        color: white !important;
    }
</style>



<%- include header %>

<section class="portlet light bordered">
    <!-- Input -->
    <% var messages = getMessages() %>
    <% if(messages.notify) { %>
    <div id="prefix_1179310738153" class="custom-alerts alert alert-success fade in"><button type="button" class="close" data-dismiss="alert" aria-hidden="true"></button><i class="fa-lg fa fa-info"></i>
        <%= messages.notify%>
    </div>
    <% } %>
    <% if(messages.error) { %>
    <div id="prefix_1179310738153" class="custom-alerts alert alert-danger fade in"><button type="button" class="close" data-dismiss="alert" aria-hidden="true"></button><i class="fa-lg fa fa-warning"></i>
        <%= messages.error%>
    </div>
    <% } %>

    <div class="portlet-title">
        <div class="caption caption-subject"> <i class="icon-bubble font-dark hide"></i>COIN TRANSFER FOR <%= name%> : <span class="caption-subject font-hide bold uppercase"></span> </div>
    </div>
    <div class="portlet-body">
        <div class="row">
            <!-- Default form -->
            <form  class="login-form" name="barcodeGym" method="post" action="/adminAddGymBarcode">
                <div class="widget">
                    <div class="">
                        <div class="form-group form-md-line-input  col-md-4 margin-bottom-10">
                            <label class="control-label"><b>Total Coins</b><span class="text-error">* &nbsp;</span></label>
                            <div class="controls">
                                <input type="text" class="form-control" name="totalCoins" id="totalCoins" placeholder="Enter Total Coins" value="" onkeypress="return isNumber(event)"/>
                                <span id="projectNameErr"></span>
                            </div>
                        </div>

                        <div class="form-group form-md-line-input  col-md-4 margin-bottom-10">
                            <label class="control-label"><b>Check In Coins</b><span class="text-error">* &nbsp;</span></label>
                            <div class="controls">
                                <input type="text" class="form-control" name="checkInCoins" id="checkInCoins" placeholder="Enter Check In Coins" value="" onkeypress="return isNumber(event)"/>
                                <span id="projectNameErr"></span>
                            </div>
                        </div>

                        <div class="form-group form-md-line-input  col-md-4">
                            <div class="mt-checkbox-list" >
                                <label class="mt-checkbox">
                                    Free Event
                                    <input type="checkbox" value="0" name="freeEvent" id="freeEvent"/>
                                    <span></span>
                                </label>
                            </div>
                        </div>
                        <div class="col-md-12 text-right" style="margin-top:30px;">

                            <input type="hidden" class="form-control" id="gymId" name="gymId" placeholder="" value="<%= id%>">

                            <a class="" style="margin-top:5px;" title="Save" type="submit">
                                <button type="submit" class="btn m-b-xs w-xs btn-primary waves-effect">
                                    Save
                                </button>
                            </a>
                            <a href="/manageGym" class="btn m-b-xs w-xs btn-danger waves-effect sort" lang="">
                                Cancel
                            </a>
                        </div>
                    </div>
                </div>
            </form>
            <!-- /default form -->
        </div>

    </div>
</section>

<%- include leftPanel %>


<script>

    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    }
    $(document).ready(function()
    {

        var i=0;
        jQuery("input,textarea").on('keypress',function(e){
            //alert();
            if(jQuery(this).val().length < 1){
                if(e.which == 32){
                    //alert(e.which);
                    return false;
                }
            }
            else {
                if(e.which == 32){
                    if(i != 0){
                        return false;
                    }
                    i++;
                }
                else{
                    i=0;
                }
            }
        });

        $("#freeEvent").click(function () {
            if ($(this).is(":checked")) {
                $(this).val('1');
                $("#totalCoins").val('0');
                $("#totalCoins").prop("readonly", true);

                $("#checkInCoins").val('0');
                $("#checkInCoins").prop("readonly", true);
            } else {
                $(this).val('0');
                $("#totalCoins").val('');
                $("#totalCoins").prop("readonly", false);

                $("#checkInCoins").val('');
                $("#checkInCoins").prop("readonly", false);
            }
        });

        $("form[name = 'barcodeGym']").validate({
            errorElement: 'span', //default input error message container
            errorClass: 'help-block', // default input error message class
            focusInvalid: false, // do not focus the last invalid input
            rules: {
                totalCoins : {
                    required: true
                },
                checkInCoins : {
                    required: true
                }
            },
            messages: {
                totalCoins : {
                    required: "Please enter total coins"
                },
                checkInCoins : {
                    required: "Please enter check in coins"
                }
            },
            invalidHandler: function (event, validator) { //display error alert on form submit
                $('.alert-danger', $('.form-horizontal')).show();
            },
            highlight: function (element) { // hightlight error inputs
                $(element).closest('.form-group').addClass('has-error'); // set error class to the control group
            },
            onfocusout: function (element) {
                $(element).valid();
            },
            success: function (label) {
                label.closest('.form-group').removeClass('has-error');
                label.remove();
            },
            errorPlacement: function (error, element) {
                error.insertAfter(element.closest('.form-control'));
            },
            submitHandler: function (form) {
                // alert("true");
                var values = [];
                $('#services :selected').each(function() {
                    console.log("submitHandler update gym : "+$(this).attr('value'));
                    values.push( $(this).attr('value') );
                });
                $("#selected_value").val(values);

                var totalCoins = parseFloat($('#totalCoins').val());
                var checkInCoins = parseFloat($('#checkInCoins').val());

                var freeEvent = $('#freeEvent').val()

                var totalBarcodes = (totalCoins / checkInCoins);

                console.log("totalCoins : "+totalCoins);
                console.log("checkInCoins : "+checkInCoins);
                console.log("totalBarcodes : "+totalBarcodes);
                console.log("freeEvent : "+freeEvent);

                if (freeEvent === '1') {
                    console.log("FreeEvent...");
                    form.submit();
                } else {
                    console.log("Non FreeEvent...");
                    var validTotal = 'Please enter vaid total coins';
                    var validCheckIn = 'Please enter vaid check In coins';

                    var validTotal1 = 'Total coins should be greater than checkIn coins';
                    var validCheckIn1 = 'Check In coins should more than total coins';

                    if ((totalCoins <= 0) && (checkInCoins <= 0))
                    {
                        console.log("else if1...");
                        $('#totalCoins').closest('.form-group').addClass('has-error');
                        $('#totalCoins').closest('.form-group').append('<span id="barcode-error" class="help-block">'+validTotal+'</span>');

                        $('#checkInCoins').closest('.form-group').addClass('has-error');
                        $('#checkInCoins').closest('.form-group').append('<span id="barcode-error" class="help-block">'+validCheckIn+'</span>');
                        return false;
                    }
                    else if (totalCoins <= 0)
                    {
                        console.log("else if2...");
                        $('#totalCoins').closest('.form-group').addClass('has-error');
                        $('#totalCoins').closest('.form-group').append('<span id="barcode-error" class="help-block">'+validTotal+'</span>');
                        return false;
                    }
                    else if (checkInCoins <= 0)
                    {
                        console.log("else if3...");
                        $('#checkInCoins').closest('.form-group').addClass('has-error');
                        $('#checkInCoins').closest('.form-group').append('<span id="barcode-error" class="help-block">'+validCheckIn+'</span>');
                        return false;
                    }
                    else if (totalBarcodes < 1)
                    {
                        console.log("else if01...");
                        // $('#totalCoins').closest('.form-group').addClass('has-error');
                        // $('#totalCoins').closest('.form-group').append('<span id="barcode-error" class="help-block">'+validTotal1+'</span>');

                        $('#checkInCoins').closest('.form-group').addClass('has-error');
                        $('#checkInCoins').closest('.form-group').append('<span id="barcode-error" class="help-block">'+validCheckIn1+'</span>');
                        return false;
                    }
                    else //if ((totalCoins > 0) && (checkInCoins > 0))
                    {
                        console.log("if0...");
                        if (totalBarcodes >= 1)
                        {
                            console.log("if01...");
                            form.submit();
                        }
                    }
                }
            }
        });

    });


</script>


<script>
    var placeSearch, autocomplete;

    function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('address')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
    }

    function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        var area, city, zipcode;
        $.each(place, function(k1,v1) {
            if (k1 == "address_components") {
                for (var i = 0; i < v1.length; i++) {
                    for (k2 in v1[i]) {
                        if (k2 == "types") {
                            var types = v1[i][k2];
                            if (types[0] =="sublocality_level_1") {
                                area = v1[i].long_name;
                                //alert ("area: " + area);
                            }
                            if (types[0] =="locality") {
                                city = v1[i].long_name;
                                //alert ("city: " + city);
                            }
                            if (types[0] =="postal_code") {
                                zipcode = v1[i].short_name;
                                //alert ("zipcode: " + zipcode);
                            }
                        }
                    }
                }
            }
        });



        $('#city').val(city);
        $('#zipcode').val(zipcode);
        $('#latitude').val(place.geometry.location.lat());
        $('#longitude').val(place.geometry.location.lng());

    }


</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDP76rTZusQqYFwVBTwkw_1fB1_a-IJJvs&libraries=places&callback=initAutocomplete" async defer></script>